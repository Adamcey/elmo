<%= elmo_form_for(@setting) do |f| %>

  <%# Need to specify form mode explicitly since it can't be surmised from action. %>
  <% @form_mode = @setting.read_only? ? :show : :edit %>

  <h2><%= t("setting.headings.general") %></h2>

  <%= f.field(:timezone, :type => :timezone, :required => true) %>
  <%= f.field(:preferred_locales_str, :required => true) %>

  <%# None of the rest of this is relevant in admin mode. %>
  <% unless admin_mode? %>
    <%= f.regenerable_field(:override_code, :confirm => t('setting.override_code_warning')) %>

    <%= f.field(:allow_unauthenticated_submissions, :type => :check_box) if configatron.allow_unauthenticated_submissions? %>

    <h2><%= t("setting.headings.sms") %></h2>

    <%= f.field(:incoming_sms_number) %>

    <%= f.regenerable_field(:incoming_sms_token, :append => link_to(t('setting.using_incoming_sms_token'), '#', :class => 'using-incoming_sms_token')) %>

    <%= f.field(:sms_gateways, :partial => 'sms_gateways', :locals => { :f => f }) %>

    <h2><%= t('activerecord.attributes.setting.external_sql') %></h2>

    <%= f.field(:external_sql, :partial => "external_sql") %>
  <% end %>

  <div class="submit-buttons">
    <%= f.submit(:class => "btn btn-primary") %>
  </div>

<% end %>

<%# using incoming_sms_token modal %>
<div class="modal fade" id="using-incoming_sms_token-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title"><%= t('activerecord.hints.setting.using_incoming_sms_token_title') %></h4>
      </div>
      <div class="modal-body pane_body"></div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal"><%= I18n.t("common.close") %></button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<%= javascript_doc_ready do %>
  // instantiate the frontend view object to handle the interactive stuff
  new ELMO.Views.SettingsView(<%=json(
    need_credentials: {
      IntelliSms: @setting.intellisms_password.blank?,
      Twilio: @setting.twilio_auth_token.blank?
    }
  )%>);
<% end %>
