<%# load the mapping API %>
<% content_for(:per_page_js){ javascript_include_tag(configatron.map_api_url) } %>

<%# title includes ID if defined %>
<% @title_args = {:id => @response.id} %>

<%= render("layouts/location_picker") %>

<%= flash_and_form_errors(@response) %>

<% @response.answers.collect{|a| a.errors.full_messages.join(", ")}.join(" ") %>

<%= nice_form_for(@response) do |f| %>

  <%= form_field(f, :form_id, :type => :hidden) %>
  
  <%# if the user can't manage the response, then don't show the submitter box as a dropdown %>
  <%= form_field(f, :user_id, :type => :select, :required => true, :options => sel_opts_from_objs(@possible_submitters), 
    :force_show_mode => !can?(:manage, @response)) %>

  <% unless f.mode == :new %>
  
    <%= form_field(f, :source) if f.mode == :show %>

    <%# only show the reviewed checkbox as editable if the user can review the response %>
    <%= form_field(f, :reviewed, :type => :check_box, :force_show_mode => !can?(:review, @response)) %>

  <% end %>  
  
  <%= render(:partial => "answer", :collection => @response.all_answers) %>
  
  <%= form_buttons do %>
    <%= form_submit_button(f, :label => :save, :multiple => true) %>
    <%= form_submit_button(f, :label => t("response.save_and_mark_reviewed"), :name => "commit_and_mark_reviewed", 
      :multiple => true) if can?(:review, @response) %>
  <% end %>
  
<% end %>

<%= javascript_doc_ready do %>
  ELMO.Response.init();
<% end %>