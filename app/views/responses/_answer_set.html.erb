<%# An answer set is a set of answers to a single question. May be multiple answers if multilevel option set. %>
<%# This view renders partials depending on if there are multiple answers and if we are in read only or editable mode. %>
<div class="form_field answer_field qtype_<%= answer_set.qtype.name %> <%= read_only ? 'read_only' : '' %>"
  data-qtype-name="<%= answer_set.qtype.name %>" id="qing_<%= answer_set.questioning_id %>"
  data-index="<%= answer_set.questioning_id %>">

  <div class="label_and_control">

    <label class="main"><%= reqd_sym if answer_set.required? %> <%= answer_set.question_name || "[#{t('answer.no_name')}]" %>:
    </label><div class="control">
      <% if answer_set.multi_level? %>
        <%# index just needs to be a unique integer, so we use the questioning ID. %>
        <%= render(read_only ? 'answer_set_read_only' : 'answer_set_editable',
          answer_set: answer_set, index: answer_set.questioning_id) %>
      <% else %>
        <%= render(read_only ? 'answer_read_only' : 'answer_editable',
          answer: answer_set.answers.first, index: answer_set.questioning_id) %>
      <% end %>
    </div>

  </div>

  <% if form_mode && answer_set.question_hint.present? %>
    <a href="#" rel="popover" class="hint" data-content="<%= answer_set.question_hint %>"><i class="hint fa fa-2x fa-info-circle"></i></a>
  <% end %>
</div>

<%# Setup condition js object if a condition exists. %>
<%# Note that we need to do this in any form mode, even show. %>
<% if answer_set.condition %>
  <%= javascript_doc_ready do %>
    ELMO.Response.conditions.push(new ELMO.Views.ConditionChecker(<%=json answer_set.condition %>));
  <% end %>
<% end %>
