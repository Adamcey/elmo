<% @title_args = {:name => @form.name, :standardized => @form.standardized?} %>

<%= flash_and_form_errors(@form) %>

<div class="screen">
  <%= published_warning(@form) if @form.published? && form_mode == :edit %>

  <%= elmo_form_for(@form) do |f| %>

    <%= f.field(:name, :required => true, :read_only => cannot?(:rename, @form)) %>

    <% unless admin_mode? %>
      <%= f.field(:smsable, :type => :check_box)  %>
      <%= f.field(:allow_incomplete, :type => :check_box) unless admin_mode? %>
      <%= f.field(:published, :type => :check_box, :read_only => true) unless @form.new_record? %>
    <% end %>

    <%= f.field(:version, :content => @form.version_with_code) unless @form.new_record? %>

    <%# this control is used by the save and publish button %>
    <input type="hidden" name="save_and_publish"/>

    <%# questions on the form %>
    <%= index_table(Questioning, @form.questionings, :within_form => true) if form_mode != :new %>

    <%# NOTE: the submit buttons are down here because there are two forms on the page
      (one for the form attribs and one for the ranks and batch action checkboxes). JS makes it work properly %>
    <%= form_buttons do %>
      <%= form_submit_button(nil, :label => :save, :multiple => true) %>
      <% if params[:action] == 'edit' && can?(:publish, @form) && !@form.published? %>
        <%= form_submit_button(nil, :label => I18n.t('form.save_and_publish'), :multiple => true, :id => "save_and_publish_btn") %>
      <% end %>
    <% end %>
  <% end %>
</div>
<div id="form_to_print"></div>

<%= javascript_doc_ready do %>
  Form.hookup_rank_boxes();
<% end %>
