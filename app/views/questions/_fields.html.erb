<div class="question_fields">

  <%# show integrity warnings if applicable %>
  <% if form_mode == :edit %>
    <%= has_answers_warning(@question) if @question.has_answers? %>
    <%= published_warning(@question) if @question.published? %>
    <%= appears_elsewhere_warning(@question) unless @question.forms.empty? %>
  <% end %>

  <%= f.field(:code, :required => true, :maxlength => 20, :read_only => cannot?(:update_code, @question)) %>

  <%# core fields should not be editable if don't have update_core permission %>
  <% cant_update_core = cannot?(:update_core, @question) %>

  <%= f.field(:qtype_name, :type => :select, :required => true, :read_only => cant_update_core,
        :options => translate_options(@question_types.map(&:name), :question_type)) %>

  <%# this is a partial because it contains more complex controls %>
  <%# the partial path is fully qualified because THIS partial might be included in several different contexts %>
  <%= f.field(:option_set_id, :partial => 'questions/option_set_select', :read_only => cant_update_core) %>

  <div class="minmax">
    <%= f.field(:minimum, :partial => 'questions/min_max_condition') %>
    <%= f.field(:maximum, :partial => 'questions/min_max_condition') %>
  </div>

  <%# title and hint boxes, one for each language %>
  <div class="names_hints">
    <% configatron.preferred_locales.each_with_index do |lang, rank| %>
      <%= render("questions/title_and_hint", :f => f, :lang => lang, :rank => rank) %>
    <% end %>
  </div>

  <%= f.field(:key, :type => :check_box) unless admin_mode? %>

  <%# new option set modal %>
  <% if form_mode != :show && can?(:create, OptionSet) %>
    <div class="new_option_set_form_wrapper" title="<%= t("option_set.create_link") %>">
    </div>
  <% end %>
</div>

<%= javascript_doc_ready do %>
  new ELMO.Views.QuestionForm({
    new_option_set_path: <%=j new_option_set_path.to_json.html_safe %>
  });
<% end %>