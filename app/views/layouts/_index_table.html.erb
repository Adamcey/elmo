<%# ensures objects collection is paginated and .all is called %>
<% objects = prepare_for_index(objects) %>
<div id="index_table">
  
  <%# header links %>
  <% unless options[:table_only] %>
    <div class="header link_set">
      <%= page_entries_info(objects, :model => klass) %>.
      &nbsp;
      <%= links %>
    </div>
  <% end %>
  
  <% unless objects.empty? %>
    <%= form_tag("", :method => "post", :id => "batch_form") do %>
      <table class="index_table">
        <thead>
          <tr class="header">
            <% if batch_ops %><th></th><% end %>
            <% fields.each do |f| %>
              <th>
                <%# if field def is a hash, look for the :title key %>
                <% if f.is_a?(Hash) %>
                  <%= f[:title] %>
                <% else %>
                  <%= f == "actions" ? "" : objects[0].class.human_attribute_name(f) %>
                <% end %>
              </th>
            <% end %>
          </tr>
        </thead>
        <tbody class="index_table_body">
          <% objects.each do |o| %>
            <%# include the url for the current object in the tr tag so that we can support clicking anywhere on the row %>
            <%# but not all objects have paths, in which case just put a blank %>
            <% url = url_for(o) rescue nil %>
            <%= content_tag(:tr, 
                  :id => "#{o.class.name.underscore}_#{o.id}",
                  :'data-href' => url,
                  :class => url ? 'clickable' : nil) do %>
      
              <% if batch_ops %>
                <td>
                  <%= check_box_tag("selected[#{o.id}]", 1, false, :onchange => "batch_cb_changed(this);") %>
                </td>
              <% end %>
              <% fields.each do |f| %>
                <td class="<%= "#{(f.is_a?(Hash) ? f[:css_class] : f).gsub(/[^\w\d]/, "")}_col" %>">
                  <div><%= self.send("format_#{klass.table_name}_field", o, f) %></div>
                </td>
              <% end %>

            <% end %>
          <% end %>
        </tbody>
      </table>
      <% if batch_ops %>
        <script type="text/javascript">batch_update_select_all_link()</script>
      <% end %>
    <% end %>
    <br/>
    
    <%# create js view model for index table, only necessary if there are some objects %>
    <%= javascript_doc_ready do %>
      new ELMO.Views.IndexTable({
        class_name: <%= objects.first.class.name.underscore.to_json.html_safe %>,
        modified_obj_id: <%= flash[:modified_obj_id].to_json.html_safe %>,
        no_whole_row_link: <%= options[:no_whole_row_link].to_json.html_safe %>
      });
    <% end %>
  <% end %>

  <%# pagination links (don't show if there are no entries) %>
  <% if paginated && objects.total_entries > 0 %>
    <%= will_paginate(objects) %>
  <% end %>

</div>

  